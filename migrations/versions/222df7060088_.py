"""empty message

Revision ID: 222df7060088
Revises: 
Create Date: 2023-04-07 16:52:00.955293

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '222df7060088'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('playlists')
    op.drop_table('albums')
    op.drop_table('artists_albums_songs')
    op.drop_table('songs')
    op.drop_table('playlists_songs')
    op.drop_table('artists')
    op.add_column('users', sa.Column('username', sa.String(length=128), nullable=False))
    op.add_column('users', sa.Column('password', sa.String(length=128), nullable=False))
    op.drop_constraint('users_user_name_key', 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['username'])
    op.drop_column('users', 'age')
    op.drop_column('users', 'user_name')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('user_name', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint('users_user_name_key', 'users', ['user_name'])
    op.drop_column('users', 'password')
    op.drop_column('users', 'username')
    op.create_table('artists',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('artists_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('genre', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='artists_pkey'),
    sa.UniqueConstraint('name', name='artists_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('playlists_songs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('playlists_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('songs_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['playlists_id'], ['playlists.id'], name='playlists_songs_playlists_id_fkey'),
    sa.ForeignKeyConstraint(['songs_id'], ['songs.id'], name='playlists_songs_songs_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='playlists_songs_pkey')
    )
    op.create_table('songs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('songs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('song_minutes', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='songs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('artists_albums_songs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('artists_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('albums_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('songs_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['albums_id'], ['albums.id'], name='artists_albums_songs_albums_id_fkey'),
    sa.ForeignKeyConstraint(['artists_id'], ['artists.id'], name='artists_albums_songs_artists_id_fkey'),
    sa.ForeignKeyConstraint(['songs_id'], ['songs.id'], name='artists_albums_songs_songs_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='artists_albums_songs_pkey')
    )
    op.create_table('albums',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('year_released', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('genre', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='albums_pkey')
    )
    op.create_table('playlists',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='playlists_pkey')
    )
    # ### end Alembic commands ###
